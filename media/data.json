[
    {
        "name": "non-fungible-token",
        "code": ";; This contract implements the SIP-009 Non-Fungible Token trait\n(impl-trait 'SP2PABAF9FTAJYNFZH93XENAJ8FVY99RRM50D2JG9.nft-trait.nft-trait)\n\n;; Define the NFT's name\n(define-non-fungible-token Your-NFT-Name uint)\n\n;; Keep track of the last minted token ID\n(define-data-var last-token-id uint u0)\n\n;; Define constants\n(define-constant CONTRACT_OWNER tx-sender)\n(define-constant COLLECTION_LIMIT u100) ;; Limit to series of 100\n\n(define-constant ERR_OWNER_ONLY (err u100))\n(define-constant ERR_NOT_TOKEN_OWNER (err u101))\n(define-constant ERR_SOLD_OUT (err u300))\n\n(define-data-var base-uri (string-ascii 125) \"https://your.api.com/path/to/collection/{id}\")\n\n;; SIP-009 function: Get the last minted token ID.\n(define-read-only (get-last-token-id)\n  (ok (var-get last-token-id))\n)\n\n;; SIP-009 function: Get link where token metadata is hosted\n(define-read-only (get-token-uri (token-id uint))\n  (ok (some (var-get base-uri)))\n)\n\n;; SIP-009 function: Get the owner of a given token\n(define-read-only (get-owner (token-id uint))\n  (ok (nft-get-owner? Your-NFT-Name token-id))\n)\n\n;; SIP-009 function: Transfer NFT token to another owner.\n(define-public (transfer (token-id uint) (sender principal) (recipient principal))\n  (begin\n    ;; #[filter(sender)]\n    (asserts! (is-eq tx-sender sender) ERR_NOT_TOKEN_OWNER)\n    (nft-transfer? Your-NFT-Name token-id sender recipient)\n  )\n)\n\n;; Mint a new NFT.\n(define-public (mint (recipient principal))\n  ;; Create the new token ID by incrementing the last minted ID.\n  (let ((token-id (+ (var-get last-token-id) u1)))\n    ;; Ensure the collection stays within the limit.\n    (asserts! (< (var-get last-token-id) COLLECTION_LIMIT) ERR_SOLD_OUT)\n    ;; Only the contract owner can mint.\n    (asserts! (is-eq tx-sender CONTRACT_OWNER) ERR_OWNER_ONLY)\n    ;; Mint the NFT and send it to the given recipient.\n    (try! (nft-mint? Your-NFT-Name token-id recipient))\n\n    ;; Update the last minted token ID.\n    (var-set last-token-id token-id)\n    ;; Return a success status and the newly minted NFT ID.\n    (ok token-id)\n  )\n)"
    }
]